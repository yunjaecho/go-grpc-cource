// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculatorpb/calculator.proto

package calculatorpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SumRequest struct {
	FirstNumber          int32    `protobuf:"varint,1,opt,name=first_number,json=firstNumber,proto3" json:"first_number,omitempty"`
	SecondNumber         int32    `protobuf:"varint,2,opt,name=second_number,json=secondNumber,proto3" json:"second_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_695bd54164d5adac, []int{0}
}
func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (dst *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(dst, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetFirstNumber() int32 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *SumRequest) GetSecondNumber() int32 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type SumRespnse struct {
	SumResult            int32    `protobuf:"varint,1,opt,name=sum_result,json=sumResult,proto3" json:"sum_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRespnse) Reset()         { *m = SumRespnse{} }
func (m *SumRespnse) String() string { return proto.CompactTextString(m) }
func (*SumRespnse) ProtoMessage()    {}
func (*SumRespnse) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_695bd54164d5adac, []int{1}
}
func (m *SumRespnse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRespnse.Unmarshal(m, b)
}
func (m *SumRespnse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRespnse.Marshal(b, m, deterministic)
}
func (dst *SumRespnse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRespnse.Merge(dst, src)
}
func (m *SumRespnse) XXX_Size() int {
	return xxx_messageInfo_SumRespnse.Size(m)
}
func (m *SumRespnse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRespnse.DiscardUnknown(m)
}

var xxx_messageInfo_SumRespnse proto.InternalMessageInfo

func (m *SumRespnse) GetSumResult() int32 {
	if m != nil {
		return m.SumResult
	}
	return 0
}

type PrimeNumberDecompositionRequest struct {
	Number               int64    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeNumberDecompositionRequest) Reset()         { *m = PrimeNumberDecompositionRequest{} }
func (m *PrimeNumberDecompositionRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeNumberDecompositionRequest) ProtoMessage()    {}
func (*PrimeNumberDecompositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_695bd54164d5adac, []int{2}
}
func (m *PrimeNumberDecompositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeNumberDecompositionRequest.Unmarshal(m, b)
}
func (m *PrimeNumberDecompositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeNumberDecompositionRequest.Marshal(b, m, deterministic)
}
func (dst *PrimeNumberDecompositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeNumberDecompositionRequest.Merge(dst, src)
}
func (m *PrimeNumberDecompositionRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeNumberDecompositionRequest.Size(m)
}
func (m *PrimeNumberDecompositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeNumberDecompositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeNumberDecompositionRequest proto.InternalMessageInfo

func (m *PrimeNumberDecompositionRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type PrimeNumberDecompositionResponse struct {
	PrimeFactor          int64    `protobuf:"varint,1,opt,name=prime_factor,json=primeFactor,proto3" json:"prime_factor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeNumberDecompositionResponse) Reset()         { *m = PrimeNumberDecompositionResponse{} }
func (m *PrimeNumberDecompositionResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeNumberDecompositionResponse) ProtoMessage()    {}
func (*PrimeNumberDecompositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_695bd54164d5adac, []int{3}
}
func (m *PrimeNumberDecompositionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeNumberDecompositionResponse.Unmarshal(m, b)
}
func (m *PrimeNumberDecompositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeNumberDecompositionResponse.Marshal(b, m, deterministic)
}
func (dst *PrimeNumberDecompositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeNumberDecompositionResponse.Merge(dst, src)
}
func (m *PrimeNumberDecompositionResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeNumberDecompositionResponse.Size(m)
}
func (m *PrimeNumberDecompositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeNumberDecompositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeNumberDecompositionResponse proto.InternalMessageInfo

func (m *PrimeNumberDecompositionResponse) GetPrimeFactor() int64 {
	if m != nil {
		return m.PrimeFactor
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumRespnse)(nil), "calculator.SumRespnse")
	proto.RegisterType((*PrimeNumberDecompositionRequest)(nil), "calculator.PrimeNumberDecompositionRequest")
	proto.RegisterType((*PrimeNumberDecompositionResponse)(nil), "calculator.PrimeNumberDecompositionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumRespnse, error)
	PrimeNumberDecompsition(ctx context.Context, in *PrimeNumberDecompositionRequest, opts ...grpc.CallOption) (CalculatorService_PrimeNumberDecompsitionClient, error)
}

type calculatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorServiceClient(cc *grpc.ClientConn) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumRespnse, error) {
	out := new(SumRespnse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) PrimeNumberDecompsition(ctx context.Context, in *PrimeNumberDecompositionRequest, opts ...grpc.CallOption) (CalculatorService_PrimeNumberDecompsitionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/calculator.CalculatorService/PrimeNumberDecompsition", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServicePrimeNumberDecompsitionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_PrimeNumberDecompsitionClient interface {
	Recv() (*PrimeNumberDecompositionResponse, error)
	grpc.ClientStream
}

type calculatorServicePrimeNumberDecompsitionClient struct {
	grpc.ClientStream
}

func (x *calculatorServicePrimeNumberDecompsitionClient) Recv() (*PrimeNumberDecompositionResponse, error) {
	m := new(PrimeNumberDecompositionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	Sum(context.Context, *SumRequest) (*SumRespnse, error)
	PrimeNumberDecompsition(*PrimeNumberDecompositionRequest, CalculatorService_PrimeNumberDecompsitionServer) error
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_PrimeNumberDecompsition_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeNumberDecompositionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).PrimeNumberDecompsition(m, &calculatorServicePrimeNumberDecompsitionServer{stream})
}

type CalculatorService_PrimeNumberDecompsitionServer interface {
	Send(*PrimeNumberDecompositionResponse) error
	grpc.ServerStream
}

type calculatorServicePrimeNumberDecompsitionServer struct {
	grpc.ServerStream
}

func (x *calculatorServicePrimeNumberDecompsitionServer) Send(m *PrimeNumberDecompositionResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalculatorService_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeNumberDecompsition",
			Handler:       _CalculatorService_PrimeNumberDecompsition_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}

func init() {
	proto.RegisterFile("calculator/calculatorpb/calculator.proto", fileDescriptor_calculator_695bd54164d5adac)
}

var fileDescriptor_calculator_695bd54164d5adac = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0x9b, 0xb7, 0xbc, 0x05, 0xa7, 0x51, 0x70, 0x0f, 0x55, 0x0a, 0x62, 0xbb, 0x5e, 0x0a,
	0x95, 0x2a, 0x7a, 0x10, 0xaf, 0xfe, 0x3b, 0x8a, 0x24, 0x9e, 0xbc, 0x84, 0x64, 0x9d, 0x42, 0x20,
	0x9b, 0x5d, 0x77, 0x76, 0xc5, 0x4f, 0xe8, 0xe7, 0x92, 0x6e, 0x12, 0xb3, 0x50, 0x44, 0x6f, 0x99,
	0x5f, 0x9e, 0x99, 0x7d, 0xe6, 0x19, 0x58, 0x88, 0xbc, 0x12, 0xae, 0xca, 0xad, 0x32, 0x67, 0xfd,
	0xa7, 0x2e, 0x82, 0x62, 0xa5, 0x8d, 0xb2, 0x8a, 0x41, 0x4f, 0xf8, 0x33, 0x40, 0xea, 0x64, 0x82,
	0x6f, 0x0e, 0xc9, 0xb2, 0x39, 0xc4, 0xeb, 0xd2, 0x90, 0xcd, 0x6a, 0x27, 0x0b, 0x34, 0x87, 0xd1,
	0x2c, 0x5a, 0xfc, 0x4f, 0xc6, 0x9e, 0x3d, 0x7a, 0xc4, 0x4e, 0x60, 0x97, 0x50, 0xa8, 0xfa, 0xb5,
	0xd3, 0xfc, 0xf3, 0x9a, 0xb8, 0x81, 0x8d, 0x88, 0x2f, 0xdb, 0xa9, 0xa4, 0x6b, 0x42, 0x76, 0x04,
	0x40, 0x4e, 0x66, 0x06, 0xc9, 0x55, 0xb6, 0x9d, 0xb9, 0x43, 0xfe, 0xbf, 0xab, 0x2c, 0xbf, 0x86,
	0xe3, 0x27, 0x53, 0x4a, 0x6c, 0x7a, 0xef, 0x50, 0x28, 0xa9, 0x15, 0x95, 0xb6, 0x54, 0x75, 0xe7,
	0x6b, 0x02, 0xa3, 0xc0, 0xd1, 0x30, 0x69, 0x2b, 0x7e, 0x0f, 0xb3, 0x9f, 0x5b, 0x49, 0xab, 0xcd,
	0xeb, 0x73, 0x88, 0xf5, 0x46, 0x93, 0xad, 0x73, 0x61, 0x55, 0x37, 0x61, 0xec, 0xd9, 0x83, 0x47,
	0x17, 0x9f, 0x11, 0xec, 0xdf, 0x7e, 0x67, 0x92, 0xa2, 0x79, 0x2f, 0x05, 0xb2, 0x2b, 0x18, 0xa6,
	0x4e, 0xb2, 0xc9, 0x2a, 0x08, 0xb0, 0xcf, 0x6a, 0xba, 0xcd, 0xfd, 0xb6, 0x7c, 0xc0, 0x3e, 0xe0,
	0x60, 0xcb, 0x55, 0x63, 0x8a, 0x2d, 0xc3, 0xa6, 0x5f, 0xb6, 0x9e, 0x9e, 0xfe, 0x4d, 0xdc, 0xec,
	0xc9, 0x07, 0xe7, 0xd1, 0xcd, 0xde, 0x4b, 0x1c, 0x9e, 0xbe, 0x18, 0xf9, 0x83, 0x5f, 0x7e, 0x05,
	0x00, 0x00, 0xff, 0xff, 0xae, 0xdd, 0xd2, 0x5f, 0x1c, 0x02, 0x00, 0x00,
}
